with new_orders as (  with awb_data as (       select             air_waybill_code,       event_data['awbId']['awbNumber']::string as awbno,      iff(event_data['flightNr']::string in ('', '-'), null, event_data['flightNr']::string) as flightno,      event_data['pieces']::int as piece_count,      event_data['status']::string as status,      event_data['eventDate']::timestamp_ntz as event_date,      event_data['event']::string as event        from              pt.air_waybill_events  ) ,clean_awb_data as (       select            awb.order_id,     coalesce(awbd1.flightno, awbd2.flightno) as flight_number,     coalesce(awbd1.piece_count, awbd2.piece_count) as piece_count,     coalesce(awbd1.event_date, awbd2.event_date) as event_date       from              pt.air_way_bills awb     left join awb_data awbd1 on right(awb.number, 8) = awbd1.awbno     left join awb_data awbd2 on awb.air_waybill_code = awbd2.air_waybill_code ) ,cleanawb as (       select            cawb.order_id,     cawb.flight_number,     cawb.piece_count       from              clean_awb_data cawb  where            date_trunc(week,  cawb.event_date::date) = date_trunc(week, current_date())       and          cawb.order_id is not null ) ,ptorder as (       select        distinct     o.order_id,     o.piece_count,     right(f.value::string, 8) as flight_numbers,     replace(flight_numbers, ' ', '') as cleans_flight_numbers       from              reporting.orders o,     lateral flatten(input => split(flight_number, ';')) f       where            1=1   and          date_trunc(week,  o.closed_at::date) = date_trunc(week, current_date())) ,awbdetails as (       select            cleanawb.order_id as awb_orderid,     cleanawb.flight_number as awb_flight_number,     cleanawb.piece_count as awb_piece_count,     ptorder.order_id,     ptorder.piece_count as piececnt,     ptorder.cleans_flight_numbers  from              cleanawb     left join ptorder on ptorder.order_id = cleanawb.order_id   and          REGEXP_REPLACE(ptorder.cleans_flight_numbers, '[^0-9]','') =         REGEXP_REPLACE(cleanawb.flight_number, '[^0-9]','')      where            1=1  and          piececnt = awb_piece_count   )   ,  prebook as (        select                    od.order_id,      od.created_at,         first_value(od.email) over (partition by od.order_id order by od.created_at asc) as email        from              pt.order_digests od               left join awbdetails on awbdetails.order_id = od.order_id       left join  an.order_digest_stats ods on od.order_id = ods.order_id        where            od.created_at < ods.true_arrived_at_dest1            and          od.source in ('user')        and          od.email  not like '%taskus%'        and          od.email not like '%invisible%'        and          od.event  in (131)       and          date_trunc(week,  od.created_at::date) = date_trunc(week, current_date())              order by 1,2 asc  ),  q1 as (        select             prebook.email as email1,      count (distinct prebook.order_id) as total1        from              prebook      group by 1  ),  disp as (        select             ot.id,      ot.order_id,      coalesce(ot.text, t.data['title']::string) as task_name,      ot.due_at,      ot.resolved_at,       ot.resolved_by_id,      u.email as resolved_by_email,      iff(ot.task_id is null, 'manual', 'system') as task_source        from              pt.order_tasks ot      left join pt.tasks t on ot.task_id = t.id      left join pt.users u on ot.resolved_by_id = u.id        where            (t.type = 'prompt' or t.type is null)        and          resolved_by_email  not like '%taskus%'        and          resolved_by_email not like  '%invisible%'        and          resolved_by_email  like  '%airspace%'           and          ot.resolved_by_id is not NULL        and          date_trunc(week,  ot.resolved_at::date) = date_trunc(week, current_date())        and          ( task_name ilike '%ASSIGN PICKUP DRIVER%'         or  task_name ilike '%CONFIRM PICKUP REQUIREMENTS%'   )  ),    q2 as (        select             disp.resolved_by_email as email2,      count ( distinct disp.order_id) as total2         from              disp      group by 1  ),  verified as (        select        distinct      od.email,       od.order_id        from              pt.order_digests od        where            od.source in ('user')        and          od.event  in (82)        and          od.email  not like '%taskus%'        and          od.email not like '%invisible%'        and          date_trunc(week,  od.created_at::date) = date_trunc(week, current_date())   ),  ksms as (        select              v.email,      v.order_id        from              verified v       left join reporting.orders o on o.order_id = v.order_id      left join adhoc.known_shipper_ksms ks on ks.iac_ac_shipper_id = o.known_shipper_number        where            o.known_shipper_number  is not null       ),  id as (        select             ot.id,      ot.order_id,      coalesce(ot.text, t.data['title']::string) as task_name,      ot.due_at,      ot.resolved_at,      ot.resolved_by_id,      u.email as resolved_by_email,      iff(ot.task_id is null, 'manual', 'system') as task_source        from              pt.order_tasks ot      left join pt.tasks t on ot.task_id = t.id      left join pt.users u on ot.resolved_by_id = u.id        where            (t.type = 'prompt' or t.type is null)        and          ot.resolved_by_id is not NULL        and          date_trunc(week,  ot.resolved_at::date) = date_trunc(week, current_date())           and          task_name ilike '%REGISTER THE PICKUP LOCATION%'   ),     idclean as (         select        distinct       order_id,       resolved_by_email as email             from              id   ),  totals as (        select              ksms.email,      ksms.order_id        from              ksms       union         select              idclean.email,      idclean.order_id        from              idclean, ksms        where            ksms.email = idclean.email  ),  q3 as (        select              email as email3,      count(order_id) as total3        from              totals      group by 1  )    select          distinct  email1 as email,   ((coalesce(total1 ,0) + coalesce(total2 ,0)+ coalesce(total3 ,0)))  as score     from              q1   left join q2 on q2.email2 = q1.email1   left join q3 on q3.email3 = q1.email1  ), trackntrace as (            with                         awb_data as (                                              select                                    air_waybill_code,                            event_data['awbId']['awbNumber']::string as awbno,                            iff(event_data['flightNr']::string in ('', '-'), null, event_data['flightNr']::string) as flightno,                            event_data['pieces']::int as piece_count,                            event_data['status']::string as status,                           event_data['eventDate']::timestamp_ntz as event_date,                            event_data['event']::string as event                              from              pt.air_waybill_events                        ),                        clean_awb_data as (                              select                                               awb.order_id,                           coalesce(awbd1.flightno, awbd2.flightno) as flight_number,                            coalesce(awbd1.piece_count, awbd2.piece_count) as piece_count,                            coalesce(awbd1.event_date, awbd2.event_date) as event_date                              from              pt.air_way_bills awb                           left join awb_data awbd1 on right(awb.number, 8) = awbd1.awbno                            left join awb_data awbd2 on awb.air_waybill_code = awbd2.air_waybill_code                        ),                      cleanawb as (                              select                                   cawb.order_id,                          cawb.flight_number,                          cawb.piece_count                            from              clean_awb_data cawb                             where            date_trunc(week,  cawb.event_date::date) = date_trunc(week, current_date())                             and          cawb.order_id is not null            ),                        ptorder as (                              select        distinct                            o.order_id,                            o.piece_count,                            right(f.value::string, 8) as flight_numbers,                           replace(flight_numbers, ' ', '') as cleans_flight_numbers                              from              reporting.orders o,                            lateral flatten(input => split(flight_number, ';')) f                              where            1=1                              and          date_trunc(week,  o.closed_at::date) = date_trunc(week, current_date())                        ),            awbdetails as (                              select                                    cleanawb.order_id as awb_orderid,                           cleanawb.flight_number as awb_flight_number,                            cleanawb.piece_count as awb_piece_count,                            ptorder.order_id,                           ptorder.piece_count as piececnt,                            ptorder.cleans_flight_numbers                              from              cleanawb                             left join ptorder on ptorder.order_id = cleanawb.order_id                               where            awb_flight_number = cleans_flight_numbers                             and          piececnt = awb_piece_count                       ),                      task_complete as (                            select                                 ot.id,                           ot.order_id,                           coalesce(ot.text, t.data['title']::string) as task_name,                           ot.due_at,                           ot.resolved_at,                           ot.resolved_by_id,                                       u.email as resolved_by_email,                           iff(ot.task_id is null, 'manual', 'system') as task_source                            from              pt.order_tasks ot                                       left join pt.tasks t on ot.task_id = t.id                           left join pt.users u on ot.resolved_by_id = u.id            left join awbdetails on awbdetails.order_id = ot.order_id              where            (t.type = 'prompt' or t.type is null)                             and          ot.resolved_by_id is not NULL                             and          resolved_by_email  not like '%taskus%'                            and          resolved_by_email not like  '%invisible%'                            and          resolved_by_email like  '%airspace%'                                        and          date_trunc(week,  ot.resolved_at::date) = date_trunc(week, current_date())                            and          task_name ilike  'CONFIRM ACCEPTED BY AIRLINE'            ),                        q1 as (              select                                    task_complete.resolved_by_email as email1,                            count (distinct task_complete.order_id)*2 as total1              from              task_complete                           group by 1            ),            awb_data as (                             select                                   air_waybill_code,                          event_data['awbId']['awbNumber']::string as awbno,                           iff(event_data['flightNr']::string in ('', '-'), null, event_data['flightNr']::string) as flightno,                           event_data['pieces']::int as piece_count,                            event_data['status']::string as status,                            event_data['eventDate']::timestamp_ntz as event_date,                            event_data['event']::string as event                              from              pt.air_waybill_events                       ),            clean_awb_data as (                              select                                   awb.order_id,                            coalesce(awbd1.flightno, awbd2.flightno) as flight_number,                            coalesce(awbd1.piece_count, awbd2.piece_count) as piece_count,                           coalesce(awbd1.event_date, awbd2.event_date) as event_date                                         from              pt.air_way_bills awb                           left join awb_data awbd1 on right(awb.number, 8) = awbd1.awbno                           left join awb_data awbd2 on awb.air_waybill_code = awbd2.air_waybill_code                       ),            cleanawb as (                               select                                   cawb.order_id,                            cawb.flight_number,                            cawb.piece_count                               from              clean_awb_data cawb                               where            date_trunc(week,  cawb.event_date::date) = date_trunc(week, current_date())                              and          cawb.order_id is not null            ),                        ptorder as (                              select        distinct                           o.order_id,                            o.piece_count,                           right(f.value::string, 8) as flight_numbers,                            replace(flight_numbers, ' ', '') as cleans_flight_numbers              from              reporting.orders o,                            lateral flatten(input => split(flight_number, ';')) f                              where            1=1                              and          date_trunc(week,  o.closed_at::date) = date_trunc(week, current_date())            ),            awbdetails as (                              select                                     cleanawb.order_id as awb_orderid,                            cleanawb.flight_number as awb_flight_number,                            cleanawb.piece_count as awb_piece_count,                           ptorder.order_id,                           ptorder.piece_count as piececnt,                           ptorder.cleans_flight_numbers              from              cleanawb                             left join ptorder on ptorder.order_id = cleanawb.order_id                              where            awb_flight_number = cleans_flight_numbers                             and          piececnt = awb_piece_count            ),            vob as (              select                                   od.email,                            od.order_id,                            od.created_at,                           datediff(minute,  od.occurred_at,od.created_at) as buffer                              from              pt.order_digests od            left join awbdetails on awbdetails.order_id = od.order_id              where            od.source in ('user')                              and          od.email  not like '%taskus%'                              and          od.email not like '%invisible%'                              and          od.event  in (27)                              and          buffer <=60                              and          date_trunc(week, od.created_at::date) = date_trunc(week, current_date())            ),                        q2 as (              select                                   vob.email as email2,                            count (distinct vob.order_id)*2 as total2                              from              vob                            group by 1            ),            assrd as (                              select                                   ot.id,                           ot.order_id,                            coalesce(ot.text, t.data['title']::string) as task_name,                            ot.due_at,                            ot.resolved_at,                            ot.resolved_by_id,                            u.email as resolved_by_email,                            iff(ot.task_id is null, 'manual', 'system') as task_source                                          from              pt.order_tasks ot                           left join pt.tasks t on ot.task_id = t.id                           left join pt.users u on ot.resolved_by_id = u.id                             where            (t.type = 'prompt' or t.type is null)                             and          ot.resolved_by_id is not NULL                              and          resolved_by_email  not like '%taskus%'                              and          resolved_by_email not like  '%invisible%'                              and          resolved_by_email like  '%airspace%'                              and          date_trunc(week, ot.resolved_at::date) = date_trunc(week, current_date())                              and          task_name ilike  '%ASSIGN RECOVERY DRIVER%'            ),                        q3 as (                              select                                   assrd.resolved_by_email as email3,                           count (distinct od.order_id) as total3              from              pt.order_digests od            left join assrd  on assrd.order_id = od.order_id                              where            assrd.resolved_at < od.occurred_at                               and          od.event  in (25)                             and          date_trunc(week, od.created_at::date) = date_trunc(week, current_date())                            group by 1            )              select                                 distinct                        email1 as email,                         ((coalesce(total1 ,0) + coalesce(total2 ,0)+ coalesce(total3 ,0)))as score                                      from              q1                         left join q2 on q2.email2 = q1.email1                         left join q3 on q3.email3 = q1.email1 ),downboard as ( with driverv as (        select        distinct      ods.order_id,      case when ods.event in (9,35,50,74,76,90,137) then 1 else 0 end as driver_verified        from              pt.order_digests ods        where            ods.source not in ('user')        and          date_trunc(week, ods.created_at::date) = date_trunc(week, current_date())        and          driver_verified =1  ),  confirmtask as (        select             u.email as resolved_by_email,      ot.id,      ot.order_id,      coalesce(ot.text, t.data['title']::string) as task_name,      ot.due_at,      ot.resolved_at,      ot.resolved_by_id,      iff(ot.task_id is null, 'manual', 'system') as task_source,      case when driverv.order_id is null then 0 else 1 end as driver_confirmed         from              pt.order_tasks ot      left join driverv on driverv.order_id = ot.order_id      left join pt.tasks t on ot.task_id = t.id      left join pt.users u on ot.resolved_by_id = u.id        where            (t.type = 'prompt' or t.type is null)        and          resolved_by_email  not like '%taskus%'        and          resolved_by_email not like  '%invisible%'        and          resolved_by_email  like  '%airspace%'          and          ot.resolved_by_id is not NULL     and          date_trunc(week, ot.resolved_at::date) = date_trunc(week, current_date())          and          (task_name ilike 'CONFIRM PICKUP'       or task_name ilike 'CONFIRM RECOVERY')        and          driver_confirmed =1   ),  calls as (        select             dcc.order_id,      dcc.user_id        from              pt.dashboard_call_clicks dcc         where            dcc.origin_component in ('dashboard_piece_verification_off_app','dashboard_piece_verification_on_app')        and          date_trunc(week, dcc.created_at::date) = date_trunc(week, current_date())        ),  errorcode as (        select              o.order_id,      o.controllable_sfs,      case when o.controllable_sfs ilike ('%supply - picked%') then 0 else 1 end as csf        from              reporting.orders o        where            csf = 1            and          date_trunc(week, o.closed_at::date) = date_trunc(week, current_date())  )    select          confirmtask.resolved_by_email as email,  count ( confirmtask.order_id)*2 as score    from              confirmtask  left join driverv on confirmtask.order_id = driverv.order_id  left join calls on confirmtask.order_id = calls.order_id  left join errorcode on confirmtask.order_id = errorcode.order_id  group by 1),sdd as (  with digest_events as (        select        distinct      dg.order_id,             dg.user_id,          case when dg.event in (30,36,57,58,140,141) then 1 else 0 end as sddaction       from              pt.order_digests dg         where            dg.source in ('user')        and          dg.email  not like '%taskus%'        and          dg.email not like '%invisible%'        and          date_trunc(week, dg.created_at::date) = date_trunc(week, current_date())           and             sddaction = 1),   sddtask      as       (         select              ot.id,       ot.order_id,       coalesce(ot.text, t.data['title']::string) as task_name,         ot.due_at,       ot.resolved_at,       ot.resolved_by_id,        u.email as resolved_by_email,          iff(ot.task_id is null, 'manual', 'system') as task_source,                case when digest_events.order_id is null then 0 else 1 end as sddtask                from              pt.order_tasks ot                 left join digest_events   on   digest_events.order_id = ot.order_id     and             digest_events.user_id = ot.resolved_by_id            left join pt.tasks t on ot.task_id = t.id          left join pt.users u on ot.resolved_by_id = u.id             where            (t.type = 'prompt' or t.type is null)              and          ot.resolved_by_id is not NULL                          and          resolved_by_email not like '%taskus%'               and          resolved_by_email not like '%invisible%'                  and          date_trunc(week, ot.resolved_at::date) = date_trunc(week, current_date())                 and          task_name in ('MANUAL DISPATCH NECESSARY','PDT EXCEEDS QDT','FLIGHT DELAYED','PDT EXCEEDS QDT CARGO HOURS','PPT EXCEEDS QPT','FLIGHT CANCELLED','FLIGHT DIVERTED','FAILURE TO LOAD')           and          sddtask=1    ),    twilio_calls as (        select              order_id,      created_at as call        from              pt.dashboard_call_clicks        where            origin_component = 'dashboard_delay_preferences'        and          date_trunc(week, created_at::date) = date_trunc(week, current_date())  )    select          st.resolved_by_email as email,  count ( distinct st.order_id)*3 as score    from              sddtask st  left join digest_events dg on dg.order_id = st.order_id  left join twilio_calls tc on tc.order_id = st.order_id  group by 1 ),finalq as (    select        *   from              new_orders union   select        *   from              trackntrace union   select        *   from              downboard union    select        *   from              sdd)   select        email, sum(score) as score   from               finalq group  by  1
